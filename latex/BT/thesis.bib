@article{turing:1950,
  title={Computing machinery and intelligence},
  author={Turing, Alan M},
  journal={Mind},
  volume={59},
  number={236},
  pages={433--460},
  year={1950},
}

@article{turing:1936,
  title={On computable numbers, with an application to the Entscheidungsproblem},
  author={Turing, Alan M},
  journal={Proceedings of the London mathematical society},
  volume={42},
  number={2},
  pages={230--265},
  year={1936},
}

@misc{https://doi.org/10.48550/arxiv.1201.0749,
  doi = {10.48550/ARXIV.1201.0749},
  
  url = {https://arxiv.org/abs/1201.0749},
  
  author = {McGuire, Gary and Tugemann, Bastian and Civario, Gilles},
  
  keywords = {Data Structures and Algorithms (cs.DS), FOS: Computer and information sciences, FOS: Computer and information sciences},
  
  title = {There is no 16-{C}lue {S}udoku: {S}olving the {S}udoku {M}inimum {N}umber of {C}lues {P}roblem},
  
  publisher = {arXiv},
  
  year = {2012},
  
  copyright = {arXiv.org perpetual, non-exclusive license}
}

@book{CrackingTheCryptic2021 ,
  title     = "Cracking The Cryptic Greatest Hits",
  author    = "Goodliffe, Mark and Anthony, Simon",
  year      = 2021,
  publisher = "Coffeebean",
  isbn = "978-1-954958-00-5"
}

@book{ArtificialAModernApproach,
  title     = "Artificial Intelligence: A Modern Approach, 4th Global ed.",
  author    = "Russell, Stuart and Norvig, Peter",
  year      = 2022,
  publisher = "Pearson",
  address   = "KAO Two KAO Park Hockham Way Harlow CM17 9SR United Kingdom",
  isbn = "978-1-292-40117-1"
}

@book{LogicForComputerScientists,
  title     = "Logic for Computer Scientists",
  author    = "Schöning Uwe",
  year      = 2008,
  publisher = "Birkhäuser, c/o Springer Science+Business Media LLC",
  address   = "233 Spring Street Boston, New York, NY 10013, USA",
  isbn = "978-0-8176-4763-6"
}

@book{IntroductionToTheTheoryOfComputation,
  title     = "Introduction to the Theory of Computation, Third Edition",
  author    = "Michael Sipser",
  year      = 2013,
  publisher = "Cengage Learning",
  address   = "20 Channel Center Street Boston, MA 02210, USA",
  isbn = "978-1-133-18779-0"
}

@book{10.5555/1121689,
author = {Knuth, Donald E.},
title = {The Art of Computer Programming, Volume 4, Fascicle 4: Generating All Trees--History of Combinatorial Generation (Art of Computer Programming)},
year = {2006},
isbn = {978-0-321-33570-8},
publisher = {Addison-Wesley Professional},
address   = "Boston, MA",
abstract = {This multivolume work on the analysis of algorithms has long been recognized as the definitive description of classical computer science.The three complete volumes published to date already comprise a unique and invaluable resource in programming theory and practice. Countless readers have spoken about the profound personal influence of Knuth's writings. Scientists have marveled at the beauty and elegance of his analysis, while practicing programmers have successfully applied his “cookbook” solutions to their day-to-day problems. All have admired Knuth for the breadth, clarity, accuracy, and good humor found in his books.To begin the fourth and later volumes of the set, and to update parts of the existing three, Knuth has created a series of small books called fascicles, which will be published at regular intervals. Each fascicle will encompass a section or more of wholly new or revised material. Ultimately, the content of these fascicles will be rolled up into the comprehensive, final versions of each volume, and the enormous undertaking that began in 1962 will be complete.Volume 4, Fascicle 4This latest fascicle covers the generation of all trees, a basic topic that has surprisingly rich ties to the first three volumes of The Art of Computer Programming. In thoroughly discussing this well-known subject, while providing 124 new exercises, Knuth continues to build a firm foundation for programming. To that same end, this fascicle also covers the history of combinatorial generation. Spanning many centuries, across many parts of the world, Knuth tells a fascinating story of interest and relevance to every artful programmer, much of it never before told. The story even includes a touch of suspense: two problems that no one has yet been able to solve.}
}

@inproceedings{10.1145/800157.805047,
author = {Cook, Stephen A.},
title = {The Complexity of Theorem-Proving Procedures},
year = {1971},
isbn = {978-1-450-37464-4},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/800157.805047},
doi = {10.1145/800157.805047},
abstract = {It is shown that any recognition problem solved by a polynomial time-bounded nondeterministic Turing machine can be “reduced” to the problem of determining whether a given propositional formula is a tautology. Here “reduced” means, roughly speaking, that the first problem can be solved deterministically in polynomial time provided an oracle is available for solving the second. From this notion of reducible, polynomial degrees of difficulty are defined, and it is shown that the problem of determining tautologyhood has the same polynomial degree as the problem of determining whether the first of two given graphs is isomorphic to a subgraph of the second. Other examples are discussed. A method of measuring the complexity of proof procedures for the predicate calculus is introduced and discussed.},
booktitle = {Proceedings of the Third Annual ACM Symposium on Theory of Computing},
pages = {151–158},
numpages = {8},
location = {Shaker Heights, Ohio, USA},
series = {STOC '71}
}

@article{levin1973universal,
  title={Universal sequential search problems},
  author={Levin, Leonid Anatolevich},
  journal={Problemy peredachi informatsii},
  volume={9},
  number={3},
  pages={115--116},
  year={1973},
  publisher={Russian Academy of Sciences, Branch of Informatics}
}

@article{Een2006TranslatingPC,
  author    = {Niklas E{\'{e}}n and
               Niklas S{\"{o}}rensson},
  title     = {Translating Pseudo-Boolean Constraints into {SAT}},
  journal   = {J. Satisf. Boolean Model. Comput.},
  volume    = {2},
  number    = {1-4},
  pages     = {1--26},
  year      = {2006},
  url       = {https://doi.org/10.3233/sat190014},
  doi       = {10.3233/sat190014},
  timestamp = {Mon, 17 Aug 2020 18:32:39 +0200},
  biburl    = {https://dblp.org/rec/journals/jsat/EenS06.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{walsh2000SATvCSP,
author="Walsh, Toby",
editor="Dechter, Rina",
title="{SAT} v {CSP}",
booktitle="Principles and Practice of Constraint Programming -- CP 2000",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="441--456",
abstract="We perform a comprehensive study of mappings between constraint satisfaction problems (CSPs) and propositional satisfiability (SAT). We analyse four different mappings of SAT problems into CSPs, and two of CSPs into SAT problems. For each mapping, we compare the impact of achieving arc-consistency on the CSP with unit propagation on the SAT problem. We then extend these results to CSP algorithms that maintain (some level of) arc-consistency during search like FC and MAC, and to the Davis-Putnam procedure (which performs unit propagation at each search node). Because of differences in the branching structure of their search, a result showing the dominance of achieving arc-consistency on the CSP over unit propagation on the SAT problem does not necessarily translate to the dominance of MAC over the Davis-Putnam procedure. These results provide insight into the relationship between propositional satisfiability and constraint satisfaction.",
isbn="978-3-540-45349-9"
}

@inproceedings{gent20002ArcConsistencyInSAT,
  author    = {Ian P. Gent},
  editor    = {Frank van Harmelen},
  title     = {{A}rc {C}onsistency in {SAT}},
  booktitle = {Proceedings of the 15th European Conference on Artificial Intelligence,
               ECAI'2002, Lyon, France, July 2002},
  pages     = {121--125},
  publisher = {{IOS} Press},
  year      = {2002},
  timestamp = {Mon, 03 Jan 2022 07:50:19 +0100},
  biburl    = {https://dblp.org/rec/conf/ecai/Gent02.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{kasif1990OnTheParallelComplexityOfDiscreteRelaxationInConstraintSatisfactionNetworks,
title = {On the parallel complexity of discrete relaxation in constraint satisfaction networks},
journal = {Artificial Intelligence},
volume = {45},
number = {3},
pages = {275-286},
year = {1990},
issn = {0004-3702},
doi = {https://doi.org/10.1016/0004-3702(90)90009-O},
url = {https://www.sciencedirect.com/science/article/pii/000437029090009O},
author = {Simon Kasif},
abstract = {Constraint satisfaction networks have been shown to be a very useful tool for knowledge representation in Artificial Intelligence applications. These networks often utilize local constraint propagation techniques to achieve local consistency (consistent labeling in vision). Such methods have been used extensively in the context of image understanding and interpretation, as well as planning, natural language analysis and truth maintenance systems. In this paper we study the parallel complexity of discrete relaxation, one of the most commonly used constraint propagation techniques. Since the constraint propagation procedures such as discrete relaxation appear to operate locally, it has been previously believed that the relaxation approach for achieving local consistency has a natural parallel solution. Our analysis suggests that a parallel solution is unlikely to improve the known sequential solutions by much. Specifically, we prove that the problem solved by discrete relaxation (arc consistency) is log-space complete for P (the class of polynomial-time deterministic sequential algorithms). Intuitively, this implies that discrete relaxation is inherently sequential and it is unlikely that we can solve the polynomial-time version of the consistent labeling problem in logarithmic time by using only a polynomial number of processors. Some practical implications of our result are discussed. We also provide a two-way transformation between AND/OR graphs, propositional Horn satisfiability and local consistency in constraint networks that allows us to develop optimal linear-time algorithms for local consistency in constraint networks.}
}

@inproceedings{Lynce2006SudokuAsASATProblem,
  author    = {In{\^{e}}s Lynce and
               Jo{\"{e}}l Ouaknine},
  title     = {Sudoku as a {SAT} {P}roblem},
  booktitle = {International Symposium on Artificial Intelligence and Mathematics,
               AI{\&}Math 2006, Fort Lauderdale, Florida, USA, January 4-6, 2006},
  year      = {2006},
  url       = {http://anytime.cs.umass.edu/aimath06/proceedings/P34.pdf},
  timestamp = {Tue, 08 Feb 2022 09:27:30 +0100},
  biburl    = {https://dblp.org/rec/conf/isaim/LynceO06.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{EenAnExtensibleSAT-solver2004,
author="E{\'e}n, Niklas
and S{\"o}rensson, Niklas",
editor="Giunchiglia, Enrico
and Tacchella, Armando",
title="An {E}xtensible {SAT}-solver",
booktitle="Theory and Applications of Satisfiability Testing",
year="2004",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="502--518",
abstract="In this article, we present a small, complete, and efficient SAT-solver in the style of conflict-driven learning, as exemplified by Chaff. We aim to give sufficient details about implementation to enable the reader to construct his or her own solver in a very short time. This will allow users of SAT-solvers to make domain specific extensions or adaptions of current state-of-the-art SAT-techniques, to meet the needs of a particular application area. The presented solver is designed with this in mind, and includes among other things a mechanism for adding arbitrary boolean constraints. It also supports solving a series of related SAT-problems efficiently by an incremental SAT-interface.",
isbn="978-3-540-24605-3"
}

@misc{webMiniSat,
  title = {{MiniSat}},
  author="E{\'e}n, Niklas and S{\"o}rensson, Niklas",
  howpublished = {\url{http://minisat.se/MiniSat.html}},
  note = {Accessed: 2022-05-14}
}

@misc{webSat4j,
  title = {{Sat4j}},
  author = {Artois University and CNRS},
  howpublished = {\url{https://www.sat4j.org/index.php}},
  note = {Accessed: 2022-06-09}
}